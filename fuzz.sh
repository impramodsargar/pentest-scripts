#!/bin/bash

# Check if the correct number of arguments is provided
if [ "$#" -ne 3 ]; then
  echo "Usage: $0 <subdomains_list> <wordlist> <output_directory>"
  exit 1
fi

# Arguments
SUBDOMAIN_LIST=$1  # File containing list of subdomains
WORDLIST=$2        # Wordlist for fuzzing
OUTPUT_DIR=$3      # Directory to save ffuf output

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Step 1: Use httpx to probe for valid domains with HTTP/HTTPS
echo "Probing for HTTP/HTTPS using httpx..."
PROBED_DOMAINS=$(httpx -silent -list "$SUBDOMAIN_LIST" -mc 200,400,401,404,403 -no-color)

if [ -z "$PROBED_DOMAINS" ]; then
  echo "No valid domains found with HTTP/HTTPS."
  exit 1
fi

# Step 2: Loop through each probed domain and fuzz with ffuf
echo "$PROBED_DOMAINS" | while read -r DOMAIN; do
  if [ -n "$DOMAIN" ]; then
    echo "Fuzzing $DOMAIN..."

    # Use ffuf to fuzz the current domain and save output in HTML format
    ffuf -u "$DOMAIN/FUZZ" -w "$WORDLIST" -ac -o "$OUTPUT_DIR/$(echo "$DOMAIN" | sed 's|https\?://||g').html" -of html

    echo "Finished fuzzing $DOMAIN. Results saved to $OUTPUT_DIR."
  fi
done

echo "Fuzzing complete for all probed domains."
